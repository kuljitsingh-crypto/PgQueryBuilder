export const DB_KEYWORDS = {
  notNull: "NOT NULL",
  unique: "UNIQUE",
  default: "DEFAULT",
  primaryKey: "PRIMARY KEY",
  foreignKey: "FOREIGN KEY",
  constraint: "CONSTRAINT",
  references: "REFERENCES",
  onDelete: "ON DELETE",
  onUpdate: "ON UPDATE",
  check: "CHECK",
  distinct: "DISTINCT",
  orderBy: "ORDER BY",
  groupBy: "GROUP BY",
  null: "NULL",
  where: "WHERE",
  select: "SELECT",
  from: "FROM",
  insertInto: "INSERT INTO",
  values: "VALUES",
  returning: "RETURNING",
  limit: "LIMIT",
  offset: "OFFSET",
  as: "AS",
  on: "ON",
  having: "HAVING",
  any: "ANY",
  array: "ARRAY",
  all: "ALL",
  in: "IN",
  for: "FOR",
  when: "WHEN",
  else: "ELSE",
  then: "THEN",
  between: "BETWEEN",
  and: "AND",
  over: "OVER",
  partitionBy: "PARTITION BY",
  not: "NOT",
  declare: "DECLARE",
  do: "DO",
  begin: "BEGIN",
  end: "END",
  language: "LANGUAGE",
  exception: "EXCEPTION",
  raiseNotice: "RAISE NOTICE",
  createType: "CREATE TYPE",
  dropType: "DROP TYPE",
  alterType: "ALTER TYPE",
  before: "BEFORE",
  after: "AFTER",
  addValue: "ADD VALUE",
  addAttr: "ADD ATTRIBUTE",
  dropAttr: "DROP ATTRIBUTE",
  attr: "ATTRIBUTE",
  rename: "RENAME",
  owner: "OWNER",
  to: "TO",
  set: "SET",
  subtype: "SUBTYPE",
  canonical: "CANONICAL",
  collation: "COLLATION",
  function: "FUNCTION",
  diff: "DIFF",
  enum: "ENUM",
  value: "VALUE",
  created: "Created",
  success: "SUCCESS",
  failed: "FAILED",
  pgType: "pg_type",
  wildcard: "*",
  typeName: "typname",
} as const;

export const WHERE_KEYWORD = "where";
export const DEFAULT_ALIAS = "results";

export type DB_KEYWORDS_TYPE = typeof DB_KEYWORDS;
export type DB_KEYWORDS_KEYS = keyof DB_KEYWORDS_TYPE;
